/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.planning.view.AdminDept;

import com.planning.dao.implement.GroupeDAO;
import com.planning.dao.implement.MatiereDAO;
import com.planning.model.ConnexionBD;
import com.planning.model.Groupe;
import com.planning.model.Matiere;
import java.awt.Color;
import java.sql.Connection;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Azough Mehdi
 */
public class GererMatiere extends javax.swing.JInternalFrame {
    DefaultTableModel model = new DefaultTableModel();
    ArrayList listemat;
    MatiereDAO matd;
    Connection conn = ConnexionBD.init();
    Matiere mat;
    
    
    public GererMatiere() {
        initComponents();
//        ((javax.swing.plaf.basic.BasicInternalFrameUI)getUI()).setNorthPane(null);
//        this.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
        this.getContentPane().setBackground(Color.white);
        this.setBorder(BorderFactory.createLineBorder(Color.black, 1));
        matd=new MatiereDAO(conn);
        listemat = matd.FindAll();
        model=(DefaultTableModel)tablemat.getModel();
        model.setRowCount(0);
        Matiere mat;
        for(int i=0 ; i<listemat.size() ; i++){
            mat = (Matiere)listemat.get(i);
            model.addRow(new Object[]{mat.getNomMatiere()});
            
            
            
        }
        tablemat.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ajouter = new javax.swing.JButton();
        Modifier = new javax.swing.JButton();
        supprimer = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablemat = new javax.swing.JTable();

        setTitle("Gestion des Matieres");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ajouter.setText("Ajouter");
        ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterActionPerformed(evt);
            }
        });
        getContentPane().add(ajouter, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 420, 110, 30));

        Modifier.setText("Modifier");
        Modifier.setEnabled(false);
        Modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifierActionPerformed(evt);
            }
        });
        getContentPane().add(Modifier, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 120, 30));

        supprimer.setText("Supprimer");
        supprimer.setEnabled(false);
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerActionPerformed(evt);
            }
        });
        getContentPane().add(supprimer, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 120, 30));

        tablemat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null}
            },
            new String [] {
                "Matière"
            }
        ));
        tablemat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablematMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablemat);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 200, 380));

        setBounds(0, 0, 810, 530);
    }// </editor-fold>//GEN-END:initComponents

    private void ajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterActionPerformed
         AjouterMat ajouter = new AjouterMat();
         ajouter.setTitle("Ajouter une matiere");
         ajouter.setGererMatiere(this);    
         ajouter.setVisible(true);
           
    }//GEN-LAST:event_ajouterActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        Modifier.setEnabled(false);
        supprimer.setEnabled(false);
        tablemat.clearSelection();  
        
    }//GEN-LAST:event_formMouseClicked

    private void ModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifierActionPerformed
        int row = tablemat.getSelectedRow();
        String nommatiere = tablemat.getModel().getValueAt(row,0).toString();
        Matiere matiere = null;
        for (int i = 0; i < listemat.size(); i++) {
            matiere = (Matiere) listemat.get(i);
            if(nommatiere.equals(matiere.getNomMatiere())) {
                break;
            }
        }
        AjouterMat modifiermat = new AjouterMat();
        modifiermat.setTitle("Modifier la matiere");
        modifiermat.setGererMatiere(this);
        modifiermat.setOldMat(matiere.getNumMatiere());
        modifiermat.setNomMatiereField(nommatiere);
        modifiermat.setVisible(true); 
        
 
    }//GEN-LAST:event_ModifierActionPerformed
    public void affichage(){
         MatiereDAO matD = new MatiereDAO(conn);    
         listemat=matD.FindAll();
         Matiere matiere;
         model = (DefaultTableModel) tablemat.getModel();
         model.setRowCount(0);
         try {
             for(int i =0 ; i<listemat.size(); i++) {
                matiere=(Matiere)listemat.get(i);
                 model.addRow(new Object[] {matiere.getNomMatiere()});
            }
         } catch (Exception e) {
             System.out.println("Exception in resulat: " + e);
             return;
         }
         
         tablemat.setModel(model);  
    }
    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerActionPerformed
       int p = JOptionPane.showConfirmDialog(null,"Etes-vous sûr de sauvegarder","Confirmation",JOptionPane.YES_NO_OPTION);
        if(p == JOptionPane.YES_OPTION) {
            int row = tablemat.getSelectedRow();
            String nomMatiere = tablemat.getModel().getValueAt(row,0).toString();
            MatiereDAO matiereD = new MatiereDAO(conn);
            Matiere mat=null;
            for(int i=0;i<listemat.size();i++){
                mat=(Matiere)listemat.get(i);
                if(nomMatiere.equals(mat.getNomMatiere())){
                    mat=(Matiere)listemat.get(i);
                    break;
                }
                   
                }
                
                matiereD.delete(mat); 
            }
            
                this.affichage(); 

    }//GEN-LAST:event_supprimerActionPerformed

    private void tablematMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablematMouseClicked
        Modifier.setEnabled(true);
        supprimer.setEnabled(true);
    }//GEN-LAST:event_tablematMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Modifier;
    private javax.swing.JButton ajouter;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton supprimer;
    private javax.swing.JTable tablemat;
    // End of variables declaration//GEN-END:variables
}
